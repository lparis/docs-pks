---
title: Preparing vSphere Before Deploying Enterprise PKS
owner: Ops Manager
---

<strong><%= modified_date %></strong>

This topic describes how to prepare your vSphere environment before deploying <%= vars.product_full %>.

## <a id='overview'></a>Overview

Before you install <%= vars.product_short %> on vSphere **without** NSX-T
integration, you must prepare your vSphere environment by creating the
required service accounts and configuring DNS for the PKS API endpoint.

You must create the following service accounts in vSphere:

* **Master Node Service Account**: Kubernetes master node VMs require storage permissions to create load balancers and attach persistent disks to pods.
Creating a custom role for this service account allows vSphere to apply the same privileges to all Kubernetes master node VMs in your <%= vars.product_short %> installation.

* **BOSH/Ops Manager Service Account**: This service account allows BOSH to deploy Ops Manager to vSphere.
You can apply privileges directly to the service account without creating a role.
You can also apply the default [VMware Administrator System Role](https://docs.vmware.com/en/VMware-vSphere/6.7/com.vmware.vsphere.security.doc/GUID-93B962A7-93FA-4E96-B68F-AE66D3D6C663.html) to the service account to achieve the appropriate permission level.

After you create the service accounts listed above, you must grant them privileges in vSphere.
<%= vars.vm_credentials %>

<p class="note"><strong>Note</strong>: If your Kubernetes clusters span
multiple vCenters, you must set the service account privileges correctly in
each vCenter.</p>

To prepare your vSphere environment, do the following:

1. [Create the Master Node Service Account](#create-master)
1. [Grant Storage Permissions](#addl-permissions)
1. [Create the BOSH/Ops Manager Service Account](#create-bosh-ops-man)
1. [Configure DNS for the PKS API](#dns)

## <a id='prerequisites'></a>Prerequisites

Before you prepare your vSphere environment, you must fulfill the prerequisites in [vSphere Prerequisites and Resource Requirements](vsphere-requirements.html).

## <a id="create-master"></a>Create the Master Node Service Account

1. From the vCenter console, create a service account for Kubernetes cluster master VMs.

1. Grant the following **Virtual Machine Object** privileges to the service account:
  <table>
    <tr><th>Privilege (UI)</th><th>Privilege (API)</th></tr>
      <tr><td>Virtual Machine > Configuration > Advanced</td><td>VirtualMachine.Configuration.Advanced</td></tr>
      <tr><td>Virtual Machine > Configuration > Settings</td><td>VirtualMachine.Configuration.Settings</td></tr>
  </table>

## <a id="addl-permissions"></a>Grant Storage Permissions

Kubernetes master node VM service accounts require the following:

* Read access to the folder, host, and datacenter of the cluster node VMs
* Permission to create and delete VMs within the resource pool where <%= vars.product_short %> is deployed

Grant these permissions to the master node service account based on your storage configuration using one of the procedures below:

* [Static Only Persistent Volume Provisioning](#static-only)
* [Dynamic Persistent Volume Provisioning (with Storage Policy-Based Volume Placement)](#dynamic-policy)
* [Dynamic Persistent Volume Provisioning (without Storage Policy-Based Volume Placement)](#dynamic-no-policy)

For more information about vSphere storage configurations, see [vSphere Storage for Kubernetes](https://vmware.github.io/vsphere-storage-for-kubernetes/documentation/index.html) in the VMware vSphere documentation.

### <a id="static-only"></a>Static Only Persistent Volume Provisioning

To configure your Kubernetes master node service account using static only Persistent Volume (PV) provisioning, do the following:

1. Create a custom role that allows the service account to manage Kubernetes node VMs. Give this role a name. For example, `manage-k8s-node-vms`. For more information about custom roles in vCenter, see [Create a Custom Role](https://docs.vmware.com/en/VMware-vSphere/6.5/com.vmware.vsphere.security.doc/GUID-41E5E52E-A95B-4E81-9724-6AD6800BEF78.html) in the VMware vSphere documentation.
  1. Grant the following privileges at the **VM Folder** level using either the vCenter UI or API:
    <table>
      <tr><th>Privilege (UI)</th><th>Privilege (API)</th></tr>
        <tr><td>Virtual Machine > Configuration > Add existing disk</td><td>VirtualMachine.Config.AddExistingDisk</td></tr>
        <tr><td>Virtual Machine > Configuration > Add new disk</td><td>VirtualMachine.Config.AddNewDisk</td></tr>
        <tr><td>Virtual Machine > Configuration > Add or remove device</td><td>VirtualMachine.Config.AddRemoveDevice</td></tr>
        <tr><td>Virtual Machine > Configuration > Remove disk</td><td>VirtualMachine.Config.RemoveDisk</td></tr>
    </table>
    1. Select the **Propagate to Child Objects** checkbox.

1. (Optional) Create a custom role that allows the service account to manage Kubernetes volumes. Give this role a name. For example, `manage-k8s-volumes`.
  <p class="note"><strong>Note</strong>: This role is required if you create a Persistent Volume Claim (PVC) to bind with a statically provisioned PV, and the reclaim policy is set to delete.
When the PVC is deleted, the statically provisioned PV is also deleted.</p>
  1. Grant the following privilege at the **Datastore** level using either the vCenter UI or API:
  <table>
    <tr><th>Privilege (UI)</th><th>Privilege (API)</th></tr>
      <tr><td>Datastore > Low level file operations</td><td>Datastore.FileManagement</td></tr>
  </table>
  1. Clear the **Propagate to Child Objects** checkbox.

1. Grant the service account the existing **Read-only** role. This role includes the following privileges at the **vCenter, Datacenter, Datastore Cluster,** and **Datastore Storage Folder** levels:
  <table>
    <tr><th>Privilege (UI)</th><th>Privilege (API)</th></tr>
      <tr><td>Read-only</td><td>System.Anonymous</td></tr>
      <tr><td></td><td>System.Read</td></tr>
      <tr><td></td><td>System.View</td></tr>
  </table>

1. Continue to [Create the BOSH/Ops Manager Service Account](#create-bosh-ops-man).

### <a id="dynamic-policy"></a>Dynamic Persistent Volume Provisioning (with Storage Policy-Based Volume Placement)

To configure your Kubernetes master node service account using dynamic PV provisioning **with** storage policy-based placement, do the following:

1. Create a custom role that allows the service account to manage Kubernetes node VMs. Give this role a name. For example, `manage-k8s-node-vms`. For more information about custom roles in vCenter, see [Create a Custom Role](https://docs.vmware.com/en/VMware-vSphere/6.5/com.vmware.vsphere.security.doc/GUID-41E5E52E-A95B-4E81-9724-6AD6800BEF78.html) in the VMware vSphere documentation.
  1. Grant the following privileges at the **Cluster, Hosts,** and **VM Folder** levels using either the vCenter UI or API:
    <table>
      <tr><th>Privilege (UI)</th><th>Privilege (API)</th></tr>
        <tr><td>Virtual Machine > Resource > Assign virtual machine to resource pool</td><td>Resource.AssignVMToPool</td></tr>
        <tr><td>Virtual Machine > Configuration > Add existing disk</td><td>VirtualMachine.Config.AddExistingDisk</td></tr>
        <tr><td>Virtual Machine > Configuration > Add new disk</td><td>VirtualMachine.Config.AddNewDisk</td></tr>
        <tr><td>Virtual Machine > Configuration > Add or remove device</td><td>VirtualMachine.Config.AddRemoveDevice</td></tr>
        <tr><td>Virtual Machine > Configuration > Remove disk</td><td>VirtualMachine.Config.RemoveDisk</td></tr>
        <tr><td>Virtual Machine > Inventory > Create new</td><td>VirtualMachine.Inventory.Create</td></tr>
        <tr><td>Virtual Machine > Inventory > Remove</td><td>VirtualMachine.Inventory.Delete</td></tr>
    </table>
    1. Select the **Propagate to Child Objects** checkbox.

1. Create a custom role that allows the service account to manage Kubernetes volumes. Give this role a name. For example, `manage-k8s-volumes`.
  1. Grant the following privilege at the **Datastore** level using either the vCenter UI or API:
  <table>
    <tr><th>Privilege (UI)</th><th>Privilege (API)</th></tr>
      <tr><td>Datastore > Allocate space</td><td>Datastore.AllocateSpace</td></tr>
      <tr><td>Datastore > Low level file operations</td><td>Datastore.FileManagement</td></tr>
  </table>
  1. Clear the **Propagate to Child Objects** checkbox.

1. Create a custom role that allows the service account to read the Kubernetes storage profile. Give this role a name. For example, `k8s-system-read-and-spbm-profile-view`.
  1. Grant the following privilege at the **vCenter** level using either the vCenter UI or API:
  <table>
    <tr><th>Privilege (UI)</th><th>Privilege (API)</th></tr>
      <tr><td>Profile-driven storage view</td><td>StorageProfile.View</td></tr>
  </table>
  1. Clear the **Propagate to Child Objects** checkbox.

1. Grant the service account the existing **Read-only** role. This role includes the following privileges at the **vCenter, Datacenter, Datastore Cluster,** and **Datastore Storage Folder** levels:
  <table>
    <tr><th>Privilege (UI)</th><th>Privilege (API)</th></tr>
      <tr><td>Read-only</td><td>System.Anonymous</td></tr>
      <tr><td></td><td>System.Read</td></tr>
      <tr><td></td><td>System.View</td></tr>
  </table>

1. Continue to [Create the BOSH/Ops Manager Service Account](#create-bosh-ops-man).

###<a id="dynamic-no-policy"></a>Dynamic Volume Provisioning (without Storage Policy-Based Volume Placement)

To configure your Kubernetes master node service account using dynamic PV provisioning **without** storage policy-based placement, do the following:

1. Create a custom role that allows the service account to manage Kubernetes node VMs. Give this role a name. For example, `manage-k8s-node-vms`. For more information about custom roles in vCenter, see [Create a Custom Role](https://docs.vmware.com/en/VMware-vSphere/6.5/com.vmware.vsphere.security.doc/GUID-41E5E52E-A95B-4E81-9724-6AD6800BEF78.html) in the VMware vSphere documentation.
  1. Grant the following privileges at the **Cluster, Hosts,** and **VM Folder** levels using either the vCenter UI or API:
    <table>
      <tr><th>Privilege (UI)</th><th>Privilege (API)</th></tr>
        <tr><td>Virtual Machine > Configuration > Add existing disk</td><td>VirtualMachine.Config.AddExistingDisk</td></tr>
        <tr><td>Virtual Machine > Configuration > Add new disk</td><td>VirtualMachine.Config.AddNewDisk</td></tr>
        <tr><td>Virtual Machine > Configuration > Add or remove device</td><td>VirtualMachine.Config.AddRemoveDevice</td></tr>
        <tr><td>Virtual Machine > Configuration > Remove disk</td><td>VirtualMachine.Config.RemoveDisk</td></tr>
    </table>
    1. Select the **Propagate to Child Objects** checkbox.

1. Create a custom role that allows the service account to manage Kubernetes volumes. Give this role a name. For example, `manage-k8s-volumes`.
  1. Grant the following privilege at the **Datastore** level using either the vCenter UI or API:
  <table>
    <tr><th>Privilege (UI)</th><th>Privilege (API)</th></tr>
      <tr><td>Datastore > Allocate space</td><td>Datastore.AllocateSpace</td></tr>
      <tr><td>Datastore > Low level file operations</td><td>Datastore.FileManagement</td></tr>
  </table>
  1. Clear the **Propagate to Child Objects** checkbox.

1. Grant the service account the existing **Read-only** role. This role includes the following privileges at the **vCenter, Datacenter, Datastore Cluster,** and **Datastore Storage Folder** levels:
  <table>
    <tr><th>Privilege (UI)</th><th>Privilege (API)</th></tr>
      <tr><td>Read-only</td><td>System.Anonymous</td></tr>
      <tr><td></td><td>System.Read</td></tr>
      <tr><td></td><td>System.View</td></tr>
  </table>

## <a id='create-bosh-ops-man'></a>Create the BOSH/Ops Manager Service Account

1. From the vCenter console, create a service account for BOSH and Ops Manager.

2. Grant the permissions below to the BOSH and Ops Manager service account.
<p class="note"><strong>Note</strong>: The privileges listed in this section describe the minimum required permissions to deploy BOSH. You can also apply the default <a href="http://pubs.vmware.com/vsphere-51/index.jsp#com.vmware.wssdk.pg.doc/PG_Authenticate_Authorize.8.6.html#1110514">VMware Administrator System Role</a> to the service account to achieve the appropriate permission level, but the default role includes more privileges than those listed below.</p>

### <a id="root"></a>vCenter Root Privileges

Grant the following privileges on the root vCenter server entity to the service account:

<table>
  <tr><th>Privilege (UI)</th><th>Privilege (API)</th></tr>
    <tr><td>Read-only</td><td>System.Anonymous</td></tr>
    <tr><td></td><td>System.Read</td></tr>
    <tr><td></td><td>System.View</td></tr>
    <tr><td>Manage custom attributes</td><td>Global.ManageCustomFields</td></tr>
</table>

### <a id="datacenter"></a>vCenter Datacenter Privileges

Grant the following privileges on any entities in a datacenter where you deploy <%= vars.product_short %>:

#### <a id="role"></a>Role Object

<table>
  <tr><th>Privilege (UI)</th><th>Privilege (API)</th></tr>
  <tr><td>Users inherit the Read-Only role from the vCenter root level</td><td>System.Anonymous</td></tr>
  <tr><td></td><td>System.Read</td></tr>
  <tr><td></td><td>System.View</td></tr>
</table>

#### <a id="datastore"></a>Datastore Object

Grant the following privileges must at the datacenter level to upload and delete virtual machine files:

<table>
  <tr><th>Privilege (UI)</th><th>Privilege (API)</th></tr>
  <tr><td>Allocate space</td><td>Datastore.AllocateSpace</td></tr>
  <tr><td>Browse datastore</td><td>Datastore.Browse</td></tr>
  <tr><td>Low level file operations</td><td>Datastore.FileManagement</td></tr>
  <tr><td>Remove file</td><td>Datastore.DeleteFile</td></tr>
  <tr><td>Update virtual machine files</td><td>Datastore.UpdateVirtualMachineFiles</td></tr>
</table>

#### <a id="folder"></a>Folder Object

<table>
  <tr><th>Privilege (UI)</th><th>Privilege (API)</th></tr>
  <tr><td>Delete folder</td><td>Folder.Delete</td></tr>
  <tr><td>Create folder</td><td>Folder.Create</td></tr>
  <tr><td>Move folder</td><td>Folder.Move</td></tr>
  <tr><td>Rename folder</td><td>Folder.Rename</td></tr>
</table>

#### <a id="global"></a>Global Object

<table>
  <tr><th>Privilege (UI)</th><th>Privilege (API)</th></tr>
  <tr><td>Set custom attribute</td><td>Global.SetCustomField</td></tr>
</table>

##### <a id="host"></a>Host Object

<table>
  <tr><th>Privilege (UI)</th><th>Privilege (API)</th></tr>
  <tr><td>Modify cluster</td><td>Host.Inventory.EditCluster</td></tr>
</table>

#### <a id="inventory-so"></a> Inventory Service Object

<table>
  <tr><th>Privilege (UI)</th><th>Privilege (API)</th></tr>
  <tr><td>vSphere Tagging > Create vSphere Tag</td><td>InventoryService.Tagging.CreateTag</td></tr>
  <tr><td>vSphere Tagging > Delete vSphere Tag</td><td>InventoryService.Tagging.EditTag</td></tr>
  <tr><td>vSphere Tagging > Edit vSphere Tag</td><td>InventoryService.Tagging.DeleteTag</td></tr>
</table>

#### <a id="network"></a>Network Object

<table>
  <tr><th>Privilege (UI)</th><th>Privilege (API)</th></tr>
  <tr><td>Assign network</td><td>Network.Assign</td></tr>
</table>

#### <a id="resource"></a>Resource Object

<table>
  <tr><th>Privilege (UI)</th><th>Privilege (API)</th></tr>
  <tr><td>Assign virtual machine to resource pool</td><td>Resource.AssignVMToPool</td></tr>
  <tr><td>Migrate powered off virtual machine</td><td>Resource.ColdMigrate</td></tr>
  <tr><td>Migrate powered on virtual machine</td><td>Resource.HotMigrate</td></tr>
</table>

#### <a id="vapp"></a>vApp Object

Grant these privileges at the resource pool level.

<table>
  <tr><th>Privilege (UI)</th><th>Privilege (API)</th></tr>
  <tr><td>Import</td><td>VApp.Import</td></tr>
  <tr><td>vApp application configuration</td><td>VApp.ApplicationConfig</td></tr>
</table>

#### <a id="vm"></a>Virtual Machine Object

<a id='configuration'></a><strong>Configuration</strong>

<table>
  <tr><th>Privilege (UI)</th><th>Privilege (API)</th></tr>
  <tr><td>Add existing disk</td><td>VirtualMachine.Config.AddExistingDisk</td></tr>
  <tr><td>Add new disk</td><td>VirtualMachine.Config.AddNewDisk</td></tr>
  <tr><td>Add or remove device</td><td>VirtualMachine.Config.AddRemoveDevice</td></tr>
  <tr><td>Advanced</td><td>VirtualMachine.Config.AdvancedConfig</td></tr>
  <tr><td>Change CPU count</td><td>VirtualMachine.Config.CPUCount</td></tr>
  <tr><td>Change resource</td><td>VirtualMachine.Config.Resource</td></tr>
  <tr><td>Configure managedBy</td><td>VirtualMachine.Config.ManagedBy</td></tr>
  <tr><td>Disk change tracking</td><td>VirtualMachine.Config.ChangeTracking</td></tr>
  <tr><td>Disk lease</td><td>VirtualMachine.Config.DiskLease</td></tr>
  <tr><td>Display connection settings</td><td>VirtualMachine.Config.MksControl</td></tr>
  <tr><td>Extend virtual disk</td><td>VirtualMachine.Config.DiskExtend</td></tr>
  <tr><td>Memory</td><td>VirtualMachine.Config.Memory</td></tr>
  <tr><td>Modify device settings</td><td>VirtualMachine.Config.EditDevice</td></tr>
  <tr><td>Raw device</td><td>VirtualMachine.Config.RawDevice</td></tr>
  <tr><td>Reload from path</td><td>VirtualMachine.Config.ReloadFromPath</td></tr>
  <tr><td>Remove disk</td><td>VirtualMachine.Config.RemoveDisk</td></tr>
  <tr><td>Rename</td><td>VirtualMachine.Config.Rename</td></tr>
  <tr><td>Reset guest information</td><td>VirtualMachine.Config.ResetGuestInfo</td></tr>
  <tr><td>Set annotation</td><td>VirtualMachine.Config.Annotation</td></tr>
  <tr><td>Settings</td><td>VirtualMachine.Config.Settings</td></tr>
  <tr><td>Swapfile placement</td><td>VirtualMachine.Config.SwapPlacement</td></tr>
  <tr><td>Unlock virtual machine</td><td>VirtualMachine.Config.Unlock</td></tr>
</table>

<a id='guest-operations'></a><strong>Guest Operations</strong>

<table>
  <tr><th>Privilege (UI)</th><th>Privilege (API)</th></tr>
  <tr><td>Guest Operation Program Execution</td><td>VirtualMachine.GuestOperations.Execute</td></tr>
  <tr><td>Guest Operation Modifications</td><td>VirtualMachine.GuestOperations.Modify</td></tr>
  <tr><td>Guest Operation Queries</td><td>VirtualMachine.GuestOperations.Query</td></tr>
</table>

<a id='interaction'></a><strong>Interaction</strong>

<table>
  <tr><th>Privilege (UI)</th><th>Privilege (API)</th></tr>
  <tr><td>Answer question</td><td>VirtualMachine.Interact.AnswerQuestion</td></tr>
  <tr><td>Configure CD media</td><td>VirtualMachine.Interact.SetCDMedia</td></tr>
  <tr><td>Console interaction</td><td>VirtualMachine.Interact.ConsoleInteract</td></tr>
  <tr><td>Defragment all disks</td><td>VirtualMachine.Interact.DefragmentAllDisks</td></tr>
  <tr><td>Device connection</td><td>VirtualMachine.Interact.DeviceConnection</td></tr>
  <tr><td>Guest operating system management by VIX API</td><td>VirtualMachine.Interact.GuestControl</td></tr>
  <tr><td>Power off</td><td>VirtualMachine.Interact.PowerOff</td></tr>
  <tr><td>Power on</td><td>VirtualMachine.Interact.PowerOn</td></tr>
  <tr><td>Reset</td><td>VirtualMachine.Interact.Reset</td></tr>
  <tr><td>Suspend</td><td>VirtualMachine.Interact.Suspend</td></tr>
  <tr><td>VMware Tools install</td><td>VirtualMachine.Interact.ToolsInstall</td></tr>
</table>

<a id='inventory'></a><strong>Inventory</strong>

<table>
  <tr><th>Privilege (UI)</th><th>Privilege (API)</th></tr>
  <tr><td>Create from existing</td><td>VirtualMachine.Inventory.CreateFromExisting</td></tr>
  <tr><td>Create new</td><td>VirtualMachine.Inventory.Create</td></tr>
  <tr><td>Move</td><td>VirtualMachine.Inventory.Move</td></tr>
  <tr><td>Register</td><td>VirtualMachine.Inventory.Register</td></tr>
  <tr><td>Remove</td><td>VirtualMachine.Inventory.Delete</td></tr>
  <tr><td>Unregister</td><td>VirtualMachine.Inventory.Unregister</td></tr>
</table>

<a id="provisioning"></a><strong>Provisioning</strong>

<table>
  <tr><th>Privilege (UI)</th><th>Privilege (API)</th></tr>
  <tr><td>Allow disk access</td><td>VirtualMachine.Provisioning.DiskRandomAccess</td></tr>
  <tr><td>Allow read-only disk access</td><td>VirtualMachine.Provisioning.DiskRandomRead</td></tr>
  <tr><td>Allow virtual machine download</td><td>VirtualMachine.Provisioning.GetVmFiles</td></tr>
  <tr><td>Allow virtual machine files upload</td><td>VirtualMachine.Provisioning.PutVmFiles</td></tr>
  <tr><td>Clone template</td><td>VirtualMachine.Provisioning.CloneTemplate</td></tr>
  <tr><td>Clone virtual machine</td><td>VirtualMachine.Provisioning.Clone</td></tr>
  <tr><td>Customize</td><td>VirtualMachine.Provisioning.Customize</td></tr>
  <tr><td>Deploy template</td><td>VirtualMachine.Provisioning.DeployTemplate</td></tr>
  <tr><td>Mark as template</td><td>VirtualMachine.Provisioning.MarkAsTemplate</td></tr>
  <tr><td>Mark as virtual machine</td><td>VirtualMachine.Provisioning.MarkAsVM</td></tr>
  <tr><td>Modify customization specification</td><td>VirtualMachine.Provisioning.ModifyCustSpecs</td></tr>
  <tr><td>Promote disks</td><td>VirtualMachine.Provisioning.PromoteDisks</td></tr>
  <tr><td>Read customization specifications</td><td>VirtualMachine.Provisioning.ReadCustSpecs</td></tr>
</table>

<a id="snapshot"></a><strong>Snapshot Management</strong>

<table>
  <tr><th>Privilege (UI)</th><th>Privilege (API)</th></tr>
    <tr><td>Create snapshot</td><td>VirtualMachine.State.CreateSnapshot</td></tr>
    <tr><td>Remove snapshot</td><td>VirtualMachine.State.RemoveSnapshot</td></tr>
    <tr><td>Rename snapshot</td><td>VirtualMachine.State.RenameSnapshot</td></tr>
    <tr><td>Revert snapshot</td><td>VirtualMachine.State.RevertToSnapshot</td></tr>
</table>

## <a id='dns'></a>Configure DNS for the PKS API

Navigate to your DNS provider and create an entry for a fully qualified domain name (FQDN) within your system domain. For example, `api.pks.example.com`.

When you configure the <%= vars.product_tile %> tile, enter this FQDN in the **PKS API** pane.

After you deploy <%= vars.product_short %>, you map the IP address of the PKS API to this FQDN. You can then use this FQDN to access the PKS API from your local system.

## <a id="next-steps"></a>Next Steps

After you complete the instructions provided in this topic, install one of the following:

* Pivotal Ops Manager v2.3.1 or later
* Pivotal Ops Manager v2.4.x

<p class="note"><strong>Note:</strong> You use Ops Manager to install and configure <%= vars.product_short %>. Each
version of Ops Manager supports multiple versions of <%= vars.product_short %>. To confirm that your Ops Manager version
supports the version of <%= vars.product_short %> that you install, see <a href="release-notes.html"><%= vars.product_short %> Release Notes</a>.</p>

To install an Ops Manager version that is compatible with the <%= vars.product_short %> version you intend to use,
follow the instructions in the corresponding version of the Ops Manager documentation.

<table>
  <tr>
    <th>Version</th>
    <th></th>
  </tr>
  <tr>
    <td>Ops Manager v2.3</td>
    <td>
      <ul>
        <li><a href="https://docs.pivotal.io/pcf/om/2-3/vsphere/deploy.html">Deploying BOSH and Ops Manager to vSphere</a></li>
        <li><a href="https://docs.pivotal.io/pcf/om/2-3/vsphere/config.html">Configuring BOSH Director on vSphere</a></li>
      </ul>
    </td>
  </tr>
  <tr>
    <td>Ops Manager v2.4</td>
    <td>
      <ul>
        <li><a href="https://docs.pivotal.io/pcf/om/2-4/vsphere/deploy.html">Deploying BOSH and Ops Manager to vSphere</a></li>
        <li><a href="https://docs.pivotal.io/pcf/om/2-4/vsphere/config.html">Configuring BOSH Director on vSphere</a></li>
      </ul>
    </td>
  </tr>
</table>
